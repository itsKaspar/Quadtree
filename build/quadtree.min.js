!function t(s,e,i){function r(h,o){if(!e[h]){if(!s[h]){var u="function"==typeof require&&require;if(!o&&u)return u(h,!0);if(n)return n(h,!0);var a=new Error("Cannot find module '"+h+"'");throw a.code="MODULE_NOT_FOUND",a}var d=e[h]={exports:{}};s[h][0].call(d.exports,(function(t){return r(s[h][1][t]||t)}),d,d.exports,t,s,e,i)}return e[h].exports}for(var n="function"==typeof require&&require,h=0;h<i.length;h++)r(i[h]);return r}({1:[function(t,s,e){s.exports=class{constructor(t,s,e){this.x=t,this.y=s,this.r=e}contains(t){return(t.pos.x-this.x)**2+(t.pos.y-this.y)**2<=this.r**2}intersects(t){var s=Math.abs(t.x-this.x),e=Math.abs(t.y-this.y),i=this.r,r=t.w,n=t.h;return!(s>i+r||e>i+n)&&(s<=r||e<=n||(s-r)**2+(e-n)**2<=this.r**2)}}},{}],2:[function(t,s,e){},{}],3:[function(t,s,e){s.exports=class{constructor(t,s,e,i){this.x=t,this.y=s,this.w=e,this.h=i}contains(t){return t.pos.x>=this.x-this.w&&t.pos.x<=this.x+this.w&&t.pos.y>=this.y-this.h&&t.pos.y<=this.y+this.h}intersects(t){return!(t.x-t.w>this.x+this.w||t.x+t.w<this.x-this.w||t.y-t.h>this.y+this.h||t.y+t.h<this.y-this.h)}}},{}],4:[function(t,s,e){const i=t("../geometry/Rectangle.js"),r=t("../geometry/Circle.js");class n{constructor(t=new i(width/2,height/2,width,height),s=4){this.boundary=t,this.capacity=s,this.points=[],this.divided=!1}subdivide(){let t=this.boundary.x,s=this.boundary.y,e=this.boundary.w/2,r=this.boundary.h/2,h=new i(t+e,s-r,e,r);this.northeast=new n(h,this.capacity);let o=new i(t-e,s-r,e,r);this.northwest=new n(o,this.capacity);let u=new i(t+e,s+r,e,r);this.southeast=new n(u,this.capacity);let a=new i(t-e,s+r,e,r);this.southwest=new n(a,this.capacity),this.divided=!0}insert(t){return!!this.boundary.contains(t)&&(this.points.length<this.capacity?(this.points.push(t),!0):(this.divided||this.subdivide(),!!(this.northeast.insert(t)||this.northwest.insert(t)||this.southeast.insert(t)||this.southwest.insert(t))||void 0))}query(t,s,e,i=[]){const n=new r(t,s,e);if(!n.intersects(this.boundary))return i;for(let t of this.points)n.contains(t)&&i.push(t);return this.divided&&(this.northwest.query(n.x,n.y,n.r,i),this.northeast.query(n.x,n.y,n.r,i),this.southwest.query(n.x,n.y,n.r,i),this.southeast.query(n.x,n.y,n.r,i)),i}renderPoints(){for(let t of this.points)noStroke(),fill(225,100,180),circle(t.x,t.y,10);this.divided&&(this.northwest.renderPoints(),this.northeast.renderPoints(),this.southwest.renderPoints(),this.southeast.renderPoints())}renderQuads(){this.divided?(this.northwest.renderQuads(),this.northeast.renderQuads(),this.southwest.renderQuads(),this.southeast.renderQuads()):(rectMode(CENTER),noFill(),rect(this.boundary.x,this.boundary.y,2*this.boundary.w-1,2*this.boundary.h-1))}}s.exports=n},{"../geometry/Circle.js":1,"../geometry/Rectangle.js":3}],5:[function(t,s,e){const i=t("./js/geometry/Point.js"),r=t("./js/geometry/Rectangle.js"),n=t("./js/geometry/Circle.js"),h=t("./js/quadtree/Quadtree.js");"undefined"!=typeof window?window.quadtree={Quadtree:h,Rectangle:r,Circle:n,Point:i}:s.exports={Quadtree:h,Rectangle:r,Circle:n,Point:i}},{"./js/geometry/Circle.js":1,"./js/geometry/Point.js":2,"./js/geometry/Rectangle.js":3,"./js/quadtree/Quadtree.js":4}]},{},[5]);