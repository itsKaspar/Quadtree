!function t(s,i,e){function r(h,o){if(!i[h]){if(!s[h]){var u="function"==typeof require&&require;if(!o&&u)return u(h,!0);if(n)return n(h,!0);var a=new Error("Cannot find module '"+h+"'");throw a.code="MODULE_NOT_FOUND",a}var c=i[h]={exports:{}};s[h][0].call(c.exports,(function(t){return r(s[h][1][t]||t)}),c,c.exports,t,s,i,e)}return i[h].exports}for(var n="function"==typeof require&&require,h=0;h<e.length;h++)r(e[h]);return r}({1:[function(t,s,i){s.exports=class{constructor(t,s,i){this.x=t,this.y=s,this.r=i}contains(t){return(t.pos.x-this.x)**2+(t.pos.y-this.y)**2<=this.r**2}intersects(t){var s=Math.abs(t.x-this.x),i=Math.abs(t.y-this.y),e=this.r,r=t.w,n=t.h;return!(s>e+r||i>e+n)&&(s<=r||i<=n||(s-r)**2+(i-n)**2<=this.r**2)}}},{}],2:[function(t,s,i){const e=t("./Rectangle.js");t("./Circle.js");class r{constructor(t=new e(300,300,600,600),s=4){this.boundary=t,this.capacity=s,this.points=[],this.divided=!1}subdivide(){let t=this.boundary.x,s=this.boundary.y,i=this.boundary.w/2,n=this.boundary.h/2,h=new e(t+i,s-n,i,n);this.northeast=new r(h,this.capacity);let o=new e(t-i,s-n,i,n);this.northwest=new r(o,this.capacity);let u=new e(t+i,s+n,i,n);this.southeast=new r(u,this.capacity);let a=new e(t-i,s+n,i,n);this.southwest=new r(a,this.capacity),this.divided=!0}insert(t){return!!this.boundary.contains(t)&&(this.points.length<this.capacity?(this.points.push(t),!0):(this.divided||this.subdivide(),!!(this.northeast.insert(t)||this.northwest.insert(t)||this.southeast.insert(t)||this.southwest.insert(t))||void 0))}query(t,s){if(s||(s=[]),!t.intersects(this.boundary))return s;for(let i of this.points)t.contains(i)&&s.push(i);return this.divided&&(this.northwest.query(t,s),this.northeast.query(t,s),this.southwest.query(t,s),this.southeast.query(t,s)),s}}s.exports=r},{"./Circle.js":1,"./Rectangle.js":3}],3:[function(t,s,i){s.exports=class{constructor(t,s,i,e){this.x=t,this.y=s,this.w=i,this.h=e}contains(t){return t.pos.x>=this.x-this.w&&t.pos.x<=this.x+this.w&&t.pos.y>=this.y-this.h&&t.pos.y<=this.y+this.h}intersects(t){return!(t.x-t.w>this.x+this.w||t.x+t.w<this.x-this.w||t.y-t.h>this.y+this.h||t.y+t.h<this.y-this.h)}}},{}],4:[function(t,s,i){const e=t("./Rectangle.js"),r=t("./Circle.js"),n=t("./Quadtree.js");"undefined"!=typeof window?window.Q={Quadtree:n,Rectangle:e,Circle:r}:s.exports={Quadtree:n,Rectangle:e,Circle:r}},{"./Circle.js":1,"./Quadtree.js":2,"./Rectangle.js":3}]},{},[4]);